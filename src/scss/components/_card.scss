@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

$card-duration: 250ms;
$card-timing: ease-out;

$card-row-gap: 0.75rem;
$card-overlay-padding: 1rem;

$card-description-translate: 0.5rem;
$card-translate-overlay: 0.5 * $card-overlay-padding + $font-size-lg;

$atmosphere-overlay-bg: linear-gradient(
  180deg,
  rgba($color-black, 0.25) 0%,
  rgba($color-black, 0.8) 100%
);

.atmosphere__card {
  position: relative;
  overflow: hidden;
  border-radius: $radius-xl;

  @include transition(box-shadow, $card-duration, $card-timing);
  @include hover-state(
    $shadow: (
      $shadow-light,
      $shadow-strong,
    )
  );
}

.atmosphere__image {
  display: block;
  width: 100%;
  aspect-ratio: 1;
  object-fit: cover;
  transform: scale(1.1) translate(0, 0);
}

.atmosphere__overlay {
  position: absolute;
  left: $spacing-none;
  bottom: $spacing-none;
  display: grid;
  row-gap: $card-row-gap;
  width: 100%;
  text-align: center;
  color: $color-white;
  padding-block: $card-overlay-padding;
  background: $atmosphere-overlay-bg;

  transform: translateY($card-translate-overlay);
  @include transition((transform), $card-duration, $card-timing);

  .atmosphere__card:hover & {
    transform: translateY(0);
  }
}

.atmosphere__caption {
  font-size: $font-size-xl;
  font-weight: $font-weight-normal;
  line-height: $line-height-none;
}

.atmosphere__description {
  font-size: $font-size-sm;
  font-weight: $font-weight-light;
  line-height: $line-height-none;

  opacity: 0;
  transform: translateY($card-description-translate);

  @include transition((opacity, transform), $card-duration, $card-timing);

  .atmosphere__card:hover & {
    opacity: 1;
    transform: translateY(0);
  }
}
